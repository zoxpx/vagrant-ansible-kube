---
- debug:
    msg:
    - "Installing {{ cri_runtime }} on {{ inventory_hostname }} with uuid {{ ansible_product_uuid }}"

- name: Add Docker GPG key (Ubuntu)
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_os_family == 'Debian'

- name: Add Docker repository (Ubuntu)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: "docker-ce"
  when: cri_runtime == 'containerd' and ansible_os_family == 'Debian'

# ---------------------------------------------

- name: Add Docker repository (CentOS)
  yum_repository:
    name: docker-ce
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/{{ ansible_distribution_major_version }}/$basearch/stable
#   baseurl: https://download.docker.com/linux/centos/7/$basearch/edge
#   baseurl: https://download.docker.com/linux/centos/7/$basearch/nightly
    gpgcheck: yes
    enabled: yes
    gpgkey:
      - https://download.docker.com/linux/centos/gpg
  when: cri_runtime == 'containerd' and ansible_os_family == 'RedHat'

# ---------------------------------------------

- name: Install Containerd
  package:
    name: 'containerd.io'
    state: present
    update_cache: yes
  when: cri_runtime == 'containerd'

- name: Start Containerd
# systemd: name=containerd daemon_reload=yes state=started enabled=yes
  systemd:
    name: containerd
    daemon_reload: yes
    state: started
    enabled: yes
  when: cri_runtime == 'containerd'

- name: Install Containerd
  package:
    name: 'containerd.io'
    state: present
    update_cache: yes
  when: cri_runtime == 'containerd'

- name: Make Containerd directory
  file:
    path: '/etc/containerd'
    state: directory
  when: cri_runtime == 'containerd'

- name: Dump default Containerd config
  shell: containerd config default > /etc/containerd/config.toml
  args:
    chdir: /etc/containerd
    creates: /etc/containerd/config.toml
  when: cri_runtime == 'containerd'

- name: Create /etc/crictl.yaml file for Containerd
  copy:
    owner: root
    group: root
    mode: '0644'
    dest: '/etc/crictl.yaml'
    content: |
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 10