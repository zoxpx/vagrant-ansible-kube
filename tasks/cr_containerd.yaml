---
- name: Add Docker gpg key (Ubuntu)
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_os_family == 'Debian'

- name: Add Docker repository (Ubuntu)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: "docker-ce"
  when: cri_runtime == 'containerd' and ansible_os_family == 'Debian'

# ---------------------------------------------

- name: Add Docker repository (CentOS)
  yum_repository:
    name: docker-ce
    description: Docker CE Stable - $basearch
#   baseurl: https://download.docker.com/linux/centos/{{ ansible_distribution_major_version }}/$basearch/stable
    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
    gpgcheck: yes
    enabled: yes
    gpgkey:
      - https://download.docker.com/linux/centos/gpg
  when: cri_runtime == 'containerd' and ansible_os_family == 'RedHat'

# ---------------------------------------------

- name: Install Containerd
  package:
    name: "containerd.io"
    state: present
    update_cache: yes
  when: cri_runtime == 'containerd'

- name: Make Containerd directory
  file:
    path: "/etc/containerd"
    state: directory
  when: cri_runtime == 'containerd'

- name: Dump default Containerd config
  shell: containerd config default > /etc/containerd/config.toml
  args:
    chdir: /etc/containerd
    creates: /etc/containerd/config.toml
  when: cri_runtime == 'containerd'

- name: Check Containerd CRI plugin
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^disabled_plugins\s*=(.*cri.*)'
    line: '# disabled_plugins=\1'
    backrefs: yes
  when: cri_runtime == 'containerd'

- name: Restart Containerd
  # systemd: name=containerd daemon_reload=yes state=started enabled=yes
  systemd:
    name: containerd
    daemon_reload: yes
    state: restarted
    enabled: yes
  when: cri_runtime == 'containerd'

- name: Create /etc/crictl.yaml file for Containerd
  copy:
    owner: root
    group: root
    mode: "0644"
    dest: "/etc/crictl.yaml"
    content: |
      runtime-endpoint: unix://{{ cri_sock }}
      image-endpoint: unix://{{ cri_sock }}
      timeout: 10
  when: cri_runtime == 'containerd'
