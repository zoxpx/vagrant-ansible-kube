---
- name: Make kubelet dir
  file:
    path: "{{ kubelet_dir }}"
    state: directory
  when: kubelet_dir is defined

# ---------------------------------------------

- name: Update kubelet for Containerd
  lineinfile:
    path: "{{ kubelet_vars }}"
    state: present
    create: yes
    regexp: '^KUBELET_EXTRA_ARGS='
    line: 'KUBELET_EXTRA_ARGS=--runtime-cgroups=/system.slice/containerd.service --container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock'
  when: cri_runtime == 'containerd'

# ---------------------------------------------

- name: Update kubelet for CRI-O
  lineinfile:
    path: "{{ kubelet_vars }}"
    state: present
    create: yes
    regexp: '^KUBELET_EXTRA_ARGS='
    line: 'KUBELET_EXTRA_ARGS=--feature-gates="AllAlpha=false,RunAsGroup=true" --container-runtime=remote --container-runtime-endpoint=unix:///var/run/crio/crio.sock'
  when: cri_runtime == 'cri-o'

# ---------------------------------------------

- name: Change default kubelet root-dir  (if required)
  lineinfile:
    path: "{{ kubelet_vars }}"
    state: present
    create: yes
    regexp: '^KUBELET_EXTRA_ARGS=(.*)'
    line: 'KUBELET_EXTRA_ARGS=--root-dir={{ kubelet_dir }} \1'
    backrefs: yes
  when: kubelet_dir is defined

- name: Change kubelet cgroups  (if required)
  lineinfile:
    path: "{{ kubelet_vars }}"
    state: present
    create: yes
    regexp: '^KUBELET_EXTRA_ARGS=(.*)'
    line: 'KUBELET_EXTRA_ARGS=--cgroup-driver={{ k8s_cgroup }} --cgroup-root=/ \1'
    backrefs: yes
  when: k8s_cgroup == 'systemd'


- name: Enable kubelet
  systemd:
    name: kubelet
    daemon_reload: yes
    state: restarted
    enabled: yes
