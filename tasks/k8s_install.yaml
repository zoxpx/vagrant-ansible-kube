---
- name: Add Kubernetes gpg key (Ubuntu)
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  when: ansible_os_family == 'Debian'

- name: Add kubernetes repository (Ubuntu)
  apt_repository:
# have https://apt.kubernetes.io/dists/kubernetes-{jessie,lucid,precise,squeeze,stretch,trusty,wheezy,xenial,yakkety}
    repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    filename: "kubernetes"
  when: ansible_os_family == 'Debian'

- name: Install Kubernetes (Ubuntu)
  apt:
    name:
      - "kubelet={{ k8s_version }}-00"
      - "kubeadm={{ k8s_version }}-00"
      - "kubectl={{ k8s_version }}-00"
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

# ---------------------------------------------

- name: Add Kubernetes repository (CentOS)
  yum_repository:
    name: kubernetes
    description: Kubernetes repository
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: yes
    enabled: yes
    repo_gpgcheck: yes
    gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  when: ansible_os_family == 'RedHat'

- name: Install Kubernetes (CentOS)
  yum:
    name:
      - "kubelet-{{ k8s_version }}"
      - "kubeadm-{{ k8s_version }}"
      - "kubectl-{{ k8s_version }}"
    state: present
    update_cache: yes
  when: ansible_os_family == 'RedHat'

# ---------------------------------------------

- name: Load kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: Persist kernel modules
  copy:
    mode: "0644"
    dest: /etc/modules-load.d/ansible.conf
    content: |
      overlay
      br_netfilter

- name: Set sysctl
  sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_set: yes
  with_items:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
    - net.ipv4.ip_forward
