---
- name: Install EtcD
  include: etcd_install.yaml

- name: Create kubeadm config
  copy:
    mode: "0644"
    dest: /etc/kubernetes/ansible.yaml
    content: |
      apiVersion: kubeadm.k8s.io/v1beta2
      kind: InitConfiguration
      bootstrapTokens:
      - groups:
        - system:bootstrappers:kubeadm:default-node-token
        token: {{ k8s_token }}
        ttl: "0"
        usages:
        - signing
        - authentication
      localAPIEndpoint:
        advertiseAddress: {{ k8s_master_ip }}
        bindPort: 6443
      ---
      apiVersion: kubeadm.k8s.io/v1beta2
      kind: ClusterConfiguration
      etcd:
        external:
          endpoints:
          - http://{{ k8s_master_ip }}:2379
      kubernetesVersion: v{{ k8s_version }}
      networking:
        dnsDomain: cluster.local
        serviceSubnet: 10.96.0.0/12
        podSubnet: 10.244.0.0/16

- name: Run kubeadm init
  command: kubeadm init --config /etc/kubernetes/ansible.yaml --cri-socket={{ cri_sock }}
  args:
    creates: /etc/kubernetes/manifests/kube-apiserver.yaml

- name: Copy kube config, install kube network
  shell: |
    install -m 700 -d '{{ ansible_env.HOME }}/.kube'                                && \
    install -m 600 /etc/kubernetes/admin.conf '{{ ansible_env.HOME }}/.kube/config' && \
    kubectl apply -n kube-system -f '{{ k8s_net }}'

# # note: kubectl will error out if nodes are not even registered; will sleep a bit till parallel `kubectl join`s catch
# - name: Waiting for nodes
#   shell: |
#     sleep 30
#     kubectl wait --for=condition=ready nodes --timeout=600s {{ansible_play_hosts|join(" ")}}
